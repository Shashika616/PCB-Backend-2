openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Choreo server url
paths:
  /api/logistics/pcbs/{pcbId}/customers/{customerId}:
    get:
      tags:
      - logistic-controller
      operationId: getCustomerDetails
      parameters:
      - name: pcbId
        in: path
        required: true
        schema:
          type: string
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Customer"
    put:
      tags:
      - logistic-controller
      operationId: updateCustomerDetails
      parameters:
      - name: pcbId
        in: path
        required: true
        schema:
          type: string
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PCB"
  /api/engineers/pcbs/{id}/engineering-parameters:
    get:
      tags:
      - engineer-controller
      operationId: getEngineeringParameters
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EngineeringParameters"
    put:
      tags:
      - engineer-controller
      operationId: updateEngineeringParameters
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EngineeringParameters"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PCB"
  /api/designers/pcbs/{id}/design:
    get:
      tags:
      - designer-controller
      operationId: getPCBDesign_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    put:
      tags:
      - designer-controller
      operationId: updatePCBDesign
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PCB"
  /api/logistics/pcbs/{id}/customers:
    get:
      tags:
      - logistic-controller
      operationId: getCustomersByPCBId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
    post:
      tags:
      - logistic-controller
      operationId: addCustomerToPCB
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PCB"
  /api/designers/pcbs:
    get:
      tags:
      - designer-controller
      operationId: getallPCB_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PCB"
    post:
      tags:
      - designer-controller
      operationId: createPCB
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PCB"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PCB"
  /api/pcbtestpage:
    get:
      tags:
      - pcb-controller
      operationId: getallPCBs
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PCB"
  /api/logistics/pcbs:
    get:
      tags:
      - logistic-controller
      operationId: getAllPCBs
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PCB"
  /api/logistics/pcbs/{id}:
    get:
      tags:
      - logistic-controller
      operationId: getPCBById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PCB"
  /api/engineers/pcbs:
    get:
      tags:
      - engineer-controller
      operationId: getallPCB
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PCB"
  /api/engineers/pcbs/{id}/design:
    get:
      tags:
      - engineer-controller
      operationId: getPCBDesign
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Customer:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        numberOfPCBsRequired:
          type: integer
          format: int32
    EngineeringParameters:
      type: object
      properties:
        materialType:
          type: string
        numberOfLayers:
          type: integer
          format: int32
        laminateThickness:
          type: number
          format: double
        coating:
          type: string
        solderMaskColor:
          type: string
    Logistics:
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: "#/components/schemas/Customer"
    PCB:
      type: object
      properties:
        id:
          type: string
        modelName:
          type: string
        design:
          type: string
        engineeringParameters:
          $ref: "#/components/schemas/EngineeringParameters"
        logistics:
          $ref: "#/components/schemas/Logistics"
